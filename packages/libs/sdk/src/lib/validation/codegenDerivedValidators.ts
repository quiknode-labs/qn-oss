import { z } from 'zod';
import {
  CodegenContractStandard,
  CodegenMarketplace,
  CodegenTokenTransferType,
} from '../../api/graphql/generatedTypes';

type ArrayToUnion<T extends readonly (string | number)[]> = T[number];
type IsEqual<T, U> = (<G>() => G extends T ? 1 : 2) extends <G>() => G extends U
  ? 1
  : 2
  ? true
  : never;

// Below are zod enums used a validators that should be the same as the string unions generated by codegen.
// There are compile-time checks to ensure that they are the same and in sync. If you are getting a
// type error here, you need to update the the validator array to match the codegen type.

const CONTRACT_STANDARDS = ['ERC20', 'ERC721', 'ERC1155'] as const;
// This is a compile-time check that the string array is the same as the generated codegen string union
// If you are getting a type error here, you need to update the the validator array to match the codegen type.
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const _assertContractStandards: IsEqual<
  ArrayToUnion<typeof CONTRACT_STANDARDS>,
  CodegenContractStandard
> = true;
export const isContractStandard = z.enum(CONTRACT_STANDARDS);

const MARKETPLACES = [
  'BLUR',
  'CRYPTOPUNKS',
  'LOOKSRARE',
  'NIFTY_GATEWAY',
  'OPENSEA',
  'SEAPORT',
  'X2Y2',
  'ZEROX',
] as const;
// This is a compile-time check that the string array is the same as the generated codegen string union
// If you are getting a type error here, you need to update the the validator array to match the codegen type.
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const _assertMarketplaces: IsEqual<
  ArrayToUnion<typeof MARKETPLACES>,
  CodegenMarketplace
> = true;
export const isMarketplace = z.enum(MARKETPLACES);

const TOKEN_TRANSFER_TYPES = [
  'TRANSFER',
  'MINT',
  'SALE',
  'SWAP',
  'BURN',
] as const;
// This is a compile-time check that the string array is the same as the generated codegen string union
// If you are getting a type error here, you need to update the the validator array to match the codegen type.
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const _assertTokenTransferTypes: IsEqual<
  ArrayToUnion<typeof TOKEN_TRANSFER_TYPES>,
  CodegenTokenTransferType
> = true;
export const isTokenTransferType = z.enum(TOKEN_TRANSFER_TYPES);
